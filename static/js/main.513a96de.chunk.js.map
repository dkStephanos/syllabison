{"version":3,"sources":["SyllabisonLogo.png","actions/index.js","containers/Callback.js","Auth.js","components/Navigation.js","containers/NavigationContainer.js","utils.js","containers/AddSyllabus.js","components/SyllabiList.js","components/SyllabusListItem.js","components/Pagination.js","containers/SyllabiListContainer.js","components/SyllabusEdit.js","containers/SyllabusEditContainer.js","components/DocumentSections/Header.js","components/DocumentSections/Title.js","components/DocumentSections/Education.js","components/DocumentSections/List.js","components/DocumentSections/Experience.js","components/DocumentSections/Skills.js","components/SyllabusDocument.js","containers/SyllabusDocumentContainer.js","App.js","reducers/index.js","sagas/index.js","index.js"],"names":["module","exports","USER_PROFILE_LOADED","HANDLE_AUTHENTICATION_CALLBACK","SIGN_OUT","ADD_SYLLABUS","UPDATE_SYLLABUS","DELETE_SYLLABUS","UPDATED_FORM_DATA","handleAuthenticationCallback","type","signOutUser","addSyllabus","rubric_code","course_number","course_name","course_credits","course_desc","prereqs","coreqs","delivery_method","dept_contact_info","course_goals","learning_outcomes","course_topics","revision_date","is_inactive","syllabus","id","Date","getTime","toString","rubricCode","courseNumber","courseName","courseCredits","courseDesc","deliveryMethod","deptContactInfo","courseGoals","learningOutcomes","courseTopics","revisionDate","isInactive","updateSyllabusFormData","syllabusFormData","updateSyllabus","deleteSyllabus","Callback","dispatch","user","to","className","connect","state","auth0Client","auth0","WebAuth","domain","audience","clientID","redirectUri","responseType","scope","handleAuthentication","Promise","resolve","reject","parseHash","err","authResult","idToken","profile","idTokenPayload","expiresAt","exp","authenticated","signIn","authorize","searchTerm","Profile","styled","span","ProfilePicture","img","Navigation","logout","props","logOutUser","history","push","e","this","value","Navbar","collapseOnSelect","expand","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","style","paddingTop","eventKey","cursor","onClick","src","picture","email","Form","inline","FormControl","ref","node","placeholder","color","handleSearch","bind","Component","withRouter","NavigationContainer","getCurrentDate","months","Array","newDate","date","getDate","month","getMonth","year","getFullYear","AddSyllabus","headerStyle","paddingBottom","useHistory","Jumbotron","Accordion","float","Card","as","Button","variant","backgroundColor","Body","aria-describedby","htmlFor","form","onSubmit","preventDefault","console","log","trim","Row","Group","Col","controlId","InputGroup","Prepend","Text","Control","width","required","Label","column","sm","rows","Check","label","SyllabusListItem","redirectToShowPage","window","location","replace","redirectToEditPage","hover","setState","listItemStyle","ListGroup","Item","onMouseEnter","toggleHover","onMouseLeave","fontSize","size","LEFT_PAGE","RIGHT_PAGE","range","from","step","i","Pagination","fetchPageNumbers","totalPages","currentPage","pageNeighbours","totalNumbers","startPage","Math","max","endPage","min","pages","hasLeftSpill","hasRightSpill","spillOffset","length","extraPages","gotoPage","page","onPageChanged","f","paginationData","pageLimit","totalRecords","handleClick","evt","handleMoveLeft","handleMoveRight","ceil","aria-label","padding","map","index","key","aria-hidden","SyllabiList","data","currentSyllabiList","sortedSyllabi","offset","slice","syllabiList","sortChoice","match","params","filter","includes","courseNum","tempSyllabiList","syllabiListItems","sort","s1","s2","class","DropdownButton","drop","title","onSelect","handleSortSelect","Dropdown","active","handlePageLimitSelect","SyllabiListContainer","SyllabusEdit","handleEditConfirmClose","editConfirmShow","handleEditConfirmShow","handleDeleteConfirmClose","deleteConfirmShow","handleDeleteConfirmShow","handleOnChange","event","target","name","currentSyllabusFormData","Object","assign","actions","toggleInactive","checked","disabled","disabledStyle","courseNameStyle","syllabusId","handleEditClick","Modal","show","onHide","Header","closeButton","Title","Footer","onChange","SyllabiEditContainer","find","bindActionCreators","syllabusActions","styles","StyleSheet","create","container","flexDirection","borderBottomWidth","borderBottomColor","borderBottomStyle","alignItems","detailColumn","flexGrow","linkColumn","alignSelf","justifySelf","textTransform","subtitle","link","textDecoration","marginBottom","children","school","degree","candidate","item","bulletPoint","itemContent","flex","List","paddingLeft","entryContainer","detailContainer","detailLeftColumn","marginLeft","marginRight","detailRightColumn","details","headerContainer","leftColumn","rightColumn","ExperienceEntry","company","position","detail","experienceData","Experience","skills","SkillEntry","skill","Skills","image","paddingRight","footer","textAlign","marginTop","borderWidth","borderColor","borderStyle","Syllabus","Education","SyllabusDocument","height","SyllabusDocumentContainer","Image","App","Container","xs","Logo","exact","path","component","SyllabusEditContainer","initialState","rubric_ode","rootSaga","call","put","takeLatest","all","persistConfig","storage","stateReconciler","autoMergeLevel2","pReducer","persistReducer","action","newSyllabiList","sagaMiddleware","createSagaMiddleware","store","createStore","applyMiddleware","persistor","persistStore","run","render","document","getElementById"],"mappings":"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","file":"static/js/main.513a96de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/SyllabisonLogo.5edc5970.png\";","export const USER_PROFILE_LOADED = 'USER_PROFILE_LOADED';\nexport const HANDLE_AUTHENTICATION_CALLBACK = 'HANDLE_AUTHENTICATION_CALLBACK';\nexport const SIGN_OUT = 'SIGN_OUT';\n\nexport const ADD_SYLLABUS = 'ADD_SYLLABUS';\nexport const UPDATE_SYLLABUS = 'UPDATE_SYLLABUS';\nexport const DELETE_SYLLABUS = 'DELETE_SYLLABUS';\nexport const UPDATED_FORM_DATA = 'UPDATED_FORM_DATA';\n\nexport function handleAuthenticationCallback() {\n  return {\n    type: HANDLE_AUTHENTICATION_CALLBACK\n  };\n}\n\nexport function signOutUser() {\n  return {\n    type: SIGN_OUT\n  };\n}\n\nexport function addSyllabus(\n  rubric_code,\n  course_number,\n  course_name,\n  course_credits,\n  course_desc,\n  prereqs,\n  coreqs,\n  delivery_method,\n  dept_contact_info,\n  course_goals,\n  learning_outcomes,\n  course_topics,\n  revision_date,\n  is_inactive\n) {\n  return {\n    type: ADD_SYLLABUS,\n    syllabus: {\n      id: new Date().getTime().toString(),\n      rubricCode: rubric_code,\n      courseNumber: course_number,\n      courseName: course_name,\n      courseCredits: course_credits,\n      courseDesc: course_desc,\n      prereqs: prereqs,\n      coreqs: coreqs,\n      deliveryMethod: delivery_method,\n      deptContactInfo: dept_contact_info,\n      courseGoals: course_goals,\n      learningOutcomes: learning_outcomes,\n      courseTopics: course_topics,\n      revisionDate: revision_date,\n      isInactive: is_inactive\n    }\n  };\n}\n\nexport const updateSyllabusFormData = syllabusFormData => {\n  return {\n    type: 'UPDATED_FORM_DATA',\n    syllabusFormData\n  };\n};\n\nexport function updateSyllabus(\n  id,\n  rubric_code,\n  course_number,\n  course_name,\n  course_credits,\n  course_desc,\n  prereqs,\n  coreqs,\n  delivery_method,\n  dept_contact_info,\n  course_goals,\n  learning_outcomes,\n  course_topics,\n  revision_date,\n  is_inactive\n) {\n  return {\n    type: UPDATE_SYLLABUS,\n    syllabus: {\n      id: id,\n      rubricCode: rubric_code,\n      courseNumber: course_number,\n      courseName: course_name,\n      courseCredits: course_credits,\n      courseDesc: course_desc,\n      prereqs: prereqs,\n      coreqs: coreqs,\n      deliveryMethod: delivery_method,\n      deptContactInfo: dept_contact_info,\n      courseGoals: course_goals,\n      learningOutcomes: learning_outcomes,\n      courseTopics: course_topics,\n      revisionDate: revision_date,\n      isInactive: is_inactive\n    }\n  };\n}\n\nexport function deleteSyllabus(id) {\n  return {\n    type: DELETE_SYLLABUS,\n    id: id\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { handleAuthenticationCallback } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nlet Callback = ({ dispatch, user }) => {\n  if (user) return <Redirect to=\"/\" />;\n  dispatch(handleAuthenticationCallback());\n\n  return <div className=\"text-center\">Loading user profile.</div>;\n};\nCallback = connect(mapStateToProps)(Callback);\n\nexport default Callback;\n","import auth0 from 'auth0-js';\n\nconst auth0Client = new auth0.WebAuth({\n  // the following three lines MUST be updated\n  domain: 'anti-social-network.auth0.com',\n  audience: 'https://anti-social-network.auth0.com/userinfo',\n  clientID: 'aAZEknqWLLzISxhqX35GATb2Qy6O5haW',\n  redirectUri: 'http://localhost:3000/callback',\n  responseType: 'id_token',\n  scope: 'openid profile email'\n});\n\nexport function handleAuthentication() {\n  return new Promise((resolve, reject) => {\n    auth0Client.parseHash((err, authResult) => {\n      if (err) return reject(err);\n      if (!authResult || !authResult.idToken) {\n        return reject(err);\n      }\n      const idToken = authResult.idToken;\n      const profile = authResult.idTokenPayload;\n      // set the time that the id token will expire at\n      const expiresAt = authResult.idTokenPayload.exp * 1000;\n      resolve({\n        authenticated: true,\n        idToken,\n        profile,\n        expiresAt\n      });\n    });\n  });\n}\n\nexport function signIn() {\n  auth0Client.authorize();\n}\n\nexport function signOut() {\n  auth0Client.logout({\n    returnTo: 'http://localhost:3000',\n    clientID: 'aAZEknqWLLzISxhqX35GATb2Qy6O5haW'\n  });\n}\n","import React, { Component } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport { Fragment } from 'react';\nimport {\n  Navbar,\n  NavDropdown,\n  Button,\n  Nav,\n  Form,\n  FormControl\n} from 'react-bootstrap';\nimport { signIn, signOut } from '../Auth';\n\nconst Profile = styled.span`\n  margin-left: 15px;\n`;\n\nconst ProfilePicture = styled.img`\n  border-radius: 50%;\n  max-width: 30px;\n  margin-right: 5px;\n`;\nlet searchTerm;\n\nclass Navigation extends Component {\n  logout = () => {\n    this.props.logOutUser();\n    this.props.history.push('/');\n  };\n\n  handleSearch(e) {\n    this.props.history.push(`/search/${searchTerm.value}`);\n  }\n\n  render() {\n    let { user } = this.props;\n    return (\n      <Navbar collapseOnSelect expand=\"lg\">\n        <Navbar.Brand href=\"/\">Home</Navbar.Brand>\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n        <Navbar.Collapse>\n          <Nav>\n            {user && (\n              <Nav.Link\n                style={{ paddingTop: '4%' }}\n                href=\"/new-syllabus\"\n                eventKey=\"1\"\n              >\n                {' '}\n                Add New{' '}\n              </Nav.Link>\n            )}\n            {!user && (\n              <Nav.Link style={{ cursor: 'pointer' }} onClick={signIn}>\n                Login\n              </Nav.Link>\n            )}\n            {user && (\n              <Fragment>\n                <Nav.Link\n                  style={{ cursor: 'pointer', paddingTop: '3.25%' }}\n                  onClick={() => this.logout()}\n                >\n                  Logout\n                  <Profile>\n                    <ProfilePicture src={user.profile.picture} />\n                    {user.profile.email}\n                  </Profile>\n                </Nav.Link>\n              </Fragment>\n            )}\n          </Nav>\n          <Form className=\"ml-auto\" inline>\n            <FormControl\n              type=\"search\"\n              ref={node => {\n                searchTerm = node;\n              }}\n              placeholder=\"Search\"\n            ></FormControl>\n            <button\n              className=\"btn btn-outline-dark my-2 my-sm-0\"\n              style={{ color: 'deepSkyBlue' }}\n              onClick={this.handleSearch.bind(this)}\n            >\n              Search\n            </button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n    );\n  }\n}\n\nexport default withRouter(Navigation);\n","import { connect } from 'react-redux';\nimport Navigation from '../components/Navigation';\nimport { signOutUser } from '../actions';\n\nconst mapStateToProps = state => {\n  return {\n    user: state.user\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  logOutUser: () => {\n    dispatch(signOutUser());\n  }\n});\n\nconst NavigationContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Navigation);\n\nexport default NavigationContainer;\n","export function getCurrentDate() {\n  var months = new Array(12);\n  months[0] = 'January';\n  months[1] = 'February';\n  months[2] = 'March';\n  months[3] = 'April';\n  months[4] = 'May';\n  months[5] = 'June';\n  months[6] = 'July';\n  months[7] = 'August';\n  months[8] = 'September';\n  months[9] = 'October';\n  months[10] = 'November';\n  months[11] = 'December';\n\n  let newDate = new Date();\n  let date = newDate.getDate();\n  let month = newDate.getMonth();\n  let year = newDate.getFullYear();\n\n  return `${months[month]} ${date}, ${year}`;\n}\n","import React, { useState } from 'react';\nimport { useHistory, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { addSyllabus } from '../actions';\nimport { getCurrentDate } from '../utils';\nimport {\n  Button,\n  Form,\n  Row,\n  Col,\n  InputGroup,\n  Jumbotron,\n  Accordion,\n  Card,\n  Modal\n} from 'react-bootstrap';\n\nlet AddSyllabus = ({ dispatch }) => {\n  let rubric_code,\n    course_number,\n    course_name,\n    course_credits,\n    course_desc,\n    prereqs,\n    coreqs,\n    delivery_method,\n    dept_contact_info,\n    course_goals,\n    learning_outcomes,\n    course_topics,\n    revision_date,\n    is_inactive;\n  let date = getCurrentDate();\n\n  let headerStyle = {\n    paddingBottom: '1%',\n    color: 'deepSkyBlue'\n  };\n\n  let history = useHistory();\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(`Submitted: ${course_name.value}`);\n    if (\n      !rubric_code.value.trim() ||\n      !course_number.value.trim() ||\n      !course_name.value.trim()\n    ) {\n      return;\n    }\n    dispatch(\n      addSyllabus(\n        rubric_code.value,\n        course_number.value,\n        course_name.value,\n        course_credits.value,\n        course_desc.value,\n        prereqs.value,\n        coreqs.value,\n        delivery_method.value,\n        dept_contact_info.value,\n        course_goals.value,\n        learning_outcomes.value,\n        course_topics.value,\n        revision_date.value,\n        is_inactive.value\n      )\n    );\n    history.push('/callback');\n  };\n\n  return (\n    <Jumbotron>\n      <Accordion style={{ float: 'right' }}>\n        <Card>\n          <Accordion.Toggle\n            as={Button}\n            variant=\"outline-dark\"\n            style={{ color: 'deepSkyBlue', backgroundColor: 'white' }}\n            eventKey=\"0\"\n          >\n            Upload\n          </Accordion.Toggle>\n          <Accordion.Collapse eventKey=\"0\">\n            <Card.Body>\n              <div className=\"input-group\">\n                <div className=\"custom-file\">\n                  <input\n                    type=\"file\"\n                    className=\"custom-file-input\"\n                    id=\"inputGroupFile01\"\n                    aria-describedby=\"inputGroupFileAddon01\"\n                  />\n                  <label\n                    className=\"custom-file-label\"\n                    htmlFor=\"inputGroupFile01\"\n                  >\n                    Choose pdf\n                  </label>\n                </div>\n              </div>\n            </Card.Body>\n          </Accordion.Collapse>\n        </Card>\n      </Accordion>\n      <Button\n        style={{\n          color: 'deepSkyBlue',\n          float: 'right',\n          backgroundColor: 'white'\n        }}\n        variant=\"outline-dark\"\n        type=\"submit\"\n        form=\"submitForm\"\n      >\n        Submit Syllabus\n      </Button>\n      <h2 style={headerStyle}>Enter Syllabus Details</h2>\n      <Form id=\"submitForm\" onSubmit={handleSubmit.bind(this)}>\n        <Form.Row>\n          <Form.Group as={Col} controlId=\"formGridEmail\">\n            <InputGroup>\n              <InputGroup.Prepend>\n                <InputGroup.Text id=\"basic-addon3\">\n                  Course Info:\n                </InputGroup.Text>\n              </InputGroup.Prepend>\n              <Form.Control\n                ref={node => {\n                  rubric_code = node;\n                }}\n                as=\"select\"\n              >\n                <option>Rubric Code:</option>\n                <option>ACCT</option>\n                <option>CSCI</option>\n                <option>DIGM</option>\n                <option>ENGL</option>\n                <option>JOUR</option>\n                <option>MATH</option>\n                <option>MGMT</option>\n                <option>MUSC</option>\n                <option>HIST</option>\n                <option>SOCI</option>\n              </Form.Control>\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Course number:\"\n                ref={node => {\n                  course_number = node;\n                }}\n              />\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Course name:\"\n                style={{ width: '25%' }}\n                ref={node => {\n                  course_name = node;\n                }}\n                required\n              />\n              <Form.Control\n                type=\"text\"\n                placeholder=\"Number of credits:\"\n                ref={node => {\n                  course_credits = node;\n                }}\n                required\n              />\n            </InputGroup>\n          </Form.Group>\n        </Form.Row>\n\n        <h4 style={headerStyle}>Catalog Information:</h4>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm={2}>\n            Catalog Description:\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"4\"\n              placeholder=\"Enter the course description:\"\n              ref={node => {\n                course_desc = node;\n              }}\n              required\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm={2}>\n            Prerequisites:\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"2\"\n              placeholder=\"Prereqs:\"\n              ref={node => {\n                prereqs = node;\n              }}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm={2}>\n            Corequisites:\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"2\"\n              placeholder=\"Coreqs:\"\n              ref={node => {\n                coreqs = node;\n              }}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm={2}>\n            Delivery Method:\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              placeholder=\"Traditional, Online, etc.\"\n              ref={node => {\n                delivery_method = node;\n              }}\n            />\n          </Col>\n        </Form.Group>\n\n        <h4 style={headerStyle}>Contact Information:</h4>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm={2}>\n            Dept Contact Info:\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              placeholder=\"Office #\"\n              ref={node => {\n                dept_contact_info = node;\n              }}\n            />\n          </Col>\n        </Form.Group>\n\n        <h4 style={headerStyle}>Syllabus Overview:</h4>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm={2}>\n            Course Purpose and Objectives:\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"4\"\n              placeholder=\"Enter the various course goals:\"\n              ref={node => {\n                course_goals = node;\n              }}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm={2}>\n            Expected Learning Outcomes:\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"4\"\n              placeholder=\"Enter the learning outcomes:\"\n              ref={node => {\n                learning_outcomes = node;\n              }}\n            />\n          </Col>\n        </Form.Group>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm={2}>\n            Major Course Topics:\n          </Form.Label>\n          <Col sm={10}>\n            <Form.Control\n              as=\"textarea\"\n              rows=\"4\"\n              placeholder=\"Enter the topics for the course:\"\n              ref={node => {\n                course_topics = node;\n              }}\n            />\n          </Col>\n        </Form.Group>\n\n        <h4 style={headerStyle}>Additional Information:</h4>\n\n        <Form.Group as={Row}>\n          <Form.Label column sm={2}>\n            Revision Term:\n          </Form.Label>\n          <Col sm={3}>\n            <Form.Control\n              type=\"text\"\n              placeholder={date}\n              ref={node => {\n                revision_date = node;\n              }}\n            />\n          </Col>\n          <Form.Check\n            style={{ paddingTop: '.5%' }}\n            type=\"checkbox\"\n            label=\"Is Inactive\"\n            ref={node => {\n              is_inactive = node;\n            }}\n          />\n        </Form.Group>\n      </Form>\n    </Jumbotron>\n  );\n};\nAddSyllabus = connect()(AddSyllabus);\n\nexport default withRouter(AddSyllabus);\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListGroup,\n  Jumbotron,\n  DropdownButton,\n  Dropdown,\n  InputGroup,\n  Form,\n  Button\n} from 'react-bootstrap';\nimport SyllabusListItem from './SyllabusListItem';\nimport Pagination from './Pagination';\n\nlet rubric_code, course_number, course_name;\n\nclass SyllabiList extends Component {\n  constructor(props) {\n    super(props);\n    console.log(this.props.syllabiList);\n    this.state = {\n      ...this.state,\n      sortChoice: 'rubric',\n      sortedSyllabi:\n        this.props.match.params.searchTerm &&\n        this.props.match.params.searchTerm != 'callback' &&\n        this.props.match.params.searchTerm != 'new-syllabus'\n          ? this.props.syllabiList.filter(syllabus =>\n              syllabus.courseName.includes(this.props.match.params.searchTerm)\n            )\n          : this.props.syllabiList,\n      currentSyllabiList: this.props.syllabiList,\n      currentPage: 1,\n      totalPages: null,\n      pageLimit: 5\n    };\n    console.log(this.state.sortedSyllabi);\n    console.log(this.props.match.params.searchTerm);\n  }\n\n  handleSortSelect(e) {\n    switch (e) {\n      case 'rubric':\n        this.setState({ sortChoice: 'rubric' });\n        break;\n\n      case 'courseNum':\n        this.setState({ sortChoice: 'courseNum' });\n        break;\n\n      case 'courseName':\n        this.setState({ sortChoice: 'courseName' });\n        break;\n    }\n  }\n\n  handlePageLimitSelect(e) {\n    switch (e) {\n      case '5':\n        this.setState({ pageLimit: 5 });\n        break;\n\n      case '10':\n        this.setState({ pageLimit: 10 });\n        break;\n\n      case '20':\n        this.setState({ pageLimit: 20 });\n        break;\n    }\n  }\n\n  handleSearch(rubricCode, courseNum, courseName) {\n    this.props.match.params.searchTerm = '';\n    let tempSyllabiList = this.props.syllabiList;\n    if (rubricCode != 'Rubric Code:') {\n      tempSyllabiList = tempSyllabiList.filter(syllabus =>\n        syllabus.rubricCode.includes(rubricCode)\n      );\n    }\n    if (courseNum != '') {\n      tempSyllabiList = tempSyllabiList.filter(syllabus =>\n        syllabus.courseNumber.includes(courseNum)\n      );\n    }\n    if (courseName != '') {\n      tempSyllabiList = tempSyllabiList.filter(syllabus =>\n        syllabus.courseName.includes(courseName)\n      );\n    }\n    this.setState({\n      sortedSyllabi: tempSyllabiList,\n      totalPages: tempSyllabiList.length\n    });\n  }\n\n  onPageChanged = data => {\n    let currentSyllabiList = this.state.sortedSyllabi;\n\n    const { currentPage, totalPages, pageLimit } = data;\n\n    const offset = (currentPage - 1) * pageLimit;\n    currentSyllabiList = currentSyllabiList.slice(offset, offset + pageLimit);\n\n    this.setState({ currentPage, currentSyllabiList, totalPages });\n  };\n\n  render() {\n    let syllabiListItems;\n\n    switch (this.state.sortChoice) {\n      case 'rubric':\n        this.state.sortedSyllabi.sort((s1, s2) => {\n          return s1.rubricCode > s2.rubricCode ? 1 : -1;\n        });\n        break;\n\n      case 'courseNum':\n        this.state.sortedSyllabi.sort((s1, s2) => {\n          return s1.courseNumber > s2.courseNumber ? 1 : -1;\n        });\n        break;\n\n      case 'courseName':\n        this.state.sortedSyllabi.sort((s1, s2) => {\n          return s1.courseName > s2.courseName ? 1 : -1;\n        });\n        break;\n    }\n\n    let syllabiList;\n    if (this.props.user) {\n      syllabiList = this.state.sortedSyllabi;\n    } else {\n      syllabiList = this.state.sortedSyllabi.filter(\n        syllabus => syllabus.isInactive == false\n      );\n    }\n\n    const offset = (this.state.currentPage - 1) * this.state.pageLimit;\n    syllabiListItems = syllabiList\n      .slice(offset, offset + this.state.pageLimit)\n      .map((syllabus, index) => (\n        <SyllabusListItem key={index} user={this.props.user} {...syllabus} />\n      ));\n\n    return (\n      <Jumbotron>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text id=\"basic-addon3\">\n              Advanced Search:\n            </InputGroup.Text>\n          </InputGroup.Prepend>\n          <Form.Control\n            ref={node => {\n              rubric_code = node;\n            }}\n            as=\"select\"\n          >\n            <option>Rubric Code:</option>\n            <option>ACCT</option>\n            <option>CSCI</option>\n            <option>DIGM</option>\n            <option>ENGL</option>\n            <option>JOUR</option>\n            <option>MATH</option>\n            <option>MGMT</option>\n            <option>MUSC</option>\n            <option>HIST</option>\n            <option>SOCI</option>\n          </Form.Control>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Course number:\"\n            ref={node => {\n              course_number = node;\n            }}\n          />\n          <Form.Control\n            type=\"text\"\n            placeholder={\n              this.props.match.params.searchTerm\n                ? this.props.match.params.searchTerm\n                : 'Course name:'\n            }\n            style={{ width: '25%' }}\n            ref={node => {\n              course_name = node;\n            }}\n          />\n          <button\n            class=\"btn btn-outline-dark my-2 my-sm-0\"\n            style={{ color: 'deepSkyBlue' }}\n            type=\"submit\"\n            onClick={e =>\n              this.handleSearch(\n                rubric_code.value,\n                course_number.value,\n                course_name.value\n              )\n            }\n          >\n            Search\n          </button>\n          <DropdownButton\n            drop=\"bottom\"\n            title={` Sort By `}\n            id={`dropdown-button-drop`}\n            key=\"sortButton\"\n            style={{ backgroundColor: 'darkGray' }}\n            variant=\"secondary\"\n            onSelect={e => this.handleSortSelect(e)}\n          >\n            <Dropdown.Item\n              active={this.state.sortChoice == 'rubric'}\n              eventKey=\"rubric\"\n            >\n              Rubric Code\n            </Dropdown.Item>\n            <Dropdown.Item\n              active={this.state.sortChoice == 'courseNum'}\n              eventKey=\"courseNum\"\n            >\n              Course Number\n            </Dropdown.Item>\n            <Dropdown.Item\n              active={this.state.sortChoice == 'courseName'}\n              eventKey=\"courseName\"\n            >\n              Course Name\n            </Dropdown.Item>\n          </DropdownButton>\n        </InputGroup>\n        <br />\n        <ListGroup>{syllabiListItems}</ListGroup>\n        <Pagination\n          key={this.state.sortedSyllabi.length + this.state.pageLimit}\n          totalRecords={this.state.sortedSyllabi.length}\n          pageLimit={this.state.pageLimit}\n          pageNeighbours={1}\n          onPageChanged={this.onPageChanged}\n        />\n        {this.state.sortedSyllabi.length > 5 && (\n          <DropdownButton\n            drop=\"bottom\"\n            title={`${this.state.pageLimit} per page`}\n            id={`dropdown-button-drop`}\n            style={{ float: 'right', padding: '.5%' }}\n            variant=\"secondary\"\n            onSelect={e => this.handlePageLimitSelect(e)}\n          >\n            <Dropdown.Item active={this.state.pageLimit == 5} eventKey=\"5\">\n              5\n            </Dropdown.Item>\n            <Dropdown.Item active={this.state.pageLimit == 10} eventKey=\"10\">\n              10\n            </Dropdown.Item>\n            {this.state.sortedSyllabi.length > 10 && (\n              <Dropdown.Item active={this.state.pageLimit == 20} eventKey=\"20\">\n                20\n              </Dropdown.Item>\n            )}\n          </DropdownButton>\n        )}\n      </Jumbotron>\n    );\n\n    SyllabiList.propTypes = {\n      syllabiList: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          course_name: PropTypes.string.isRequired\n        }).isRequired\n      ).isRequired\n    };\n  }\n}\nexport default SyllabiList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ListGroup from 'react-bootstrap/ListGroup';\nimport { Button } from 'react-bootstrap';\n\nclass SyllabusListItem extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  toggleHover() {\n    this.setState({ hover: !this.state.hover });\n  }\n\n  redirectToShowPage = id => {\n    window.location.replace(`/syllabi/${id}`);\n  };\n\n  redirectToEditPage = id => {\n    window.location.replace(`/syllabi/edit/${id}`);\n  };\n\n  render() {\n    let { id, rubricCode, courseNumber, courseName } = this.props;\n    let listItemStyle;\n\n    if (this.state.hover) {\n      listItemStyle = { color: 'lightSkyBlue', cursor: 'pointer' };\n    }\n\n    return (\n      <ListGroup.Item style={listItemStyle}>\n        <span\n          onMouseEnter={this.toggleHover.bind(this)}\n          onMouseLeave={this.toggleHover.bind(this)}\n          onClick={() => this.redirectToShowPage(id)}\n          style={{ fontSize: '15pt' }}\n        >\n          {rubricCode} {courseNumber} - {courseName}\n        </span>\n        {this.props.user && (\n          <Button\n            onClick={() => this.redirectToEditPage(id)}\n            size=\"sm\"\n            variant=\"secondary\"\n            style={{ float: 'right', color: 'skyBlue' }}\n          >\n            edit\n          </Button>\n        )}\n      </ListGroup.Item>\n    );\n  }\n}\n\nSyllabusListItem.propTypes = {\n  course_number: PropTypes.number.isRequired,\n  course_credits: PropTypes.number.isRequired,\n  course_name: PropTypes.string.isRequired\n};\n\nexport default SyllabusListItem;\n","import React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\n\nconst LEFT_PAGE = 'LEFT';\nconst RIGHT_PAGE = 'RIGHT';\n\nconst range = (from, to, step = 1) => {\n  let i = from;\n  const range = [];\n\n  while (i <= to) {\n    range.push(i);\n    i += step;\n  }\n\n  return range;\n};\n\nclass Pagination extends Component {\n  constructor(props) {\n    super(props);\n    const { totalRecords = null, pageLimit = 5, pageNeighbours = 1 } = props;\n\n    this.pageLimit = typeof pageLimit === 'number' ? pageLimit : 1000;\n    this.totalRecords = typeof totalRecords === 'number' ? totalRecords : 0;\n\n    // pageNeighbours can be: 0, 1 or 2\n    this.pageNeighbours =\n      typeof pageNeighbours === 'number'\n        ? Math.max(0, Math.min(pageNeighbours, 2))\n        : 0;\n\n    this.totalPages = Math.ceil(this.totalRecords / this.pageLimit);\n\n    this.state = { currentPage: 1 };\n  }\n\n  fetchPageNumbers = () => {\n    const totalPages = this.totalPages;\n    const currentPage = this.state.currentPage;\n    const pageNeighbours = this.pageNeighbours;\n\n    /**\n     * totalNumbers: the total page numbers to show on the control\n     * totalBlocks: totalNumbers + 2 to cover for the left(<) and right(>) controls\n     */\n    const totalNumbers = this.pageNeighbours * 2 + 3;\n    const totalBlocks = totalNumbers + 2;\n\n    if (totalPages > totalBlocks) {\n      const startPage = Math.max(2, currentPage - pageNeighbours);\n      const endPage = Math.min(totalPages - 1, currentPage + pageNeighbours);\n\n      let pages = range(startPage, endPage);\n\n      /**\n       * hasLeftSpill: has hidden pages to the left\n       * hasRightSpill: has hidden pages to the right\n       * spillOffset: number of hidden pages either to the left or to the right\n       */\n      const hasLeftSpill = startPage > 2;\n      const hasRightSpill = totalPages - endPage > 1;\n      const spillOffset = totalNumbers - (pages.length + 1);\n\n      switch (true) {\n        // handle: (1) < {5 6} [7] {8 9} (10)\n        case hasLeftSpill && !hasRightSpill: {\n          const extraPages = range(startPage - spillOffset, startPage - 1);\n          pages = [LEFT_PAGE, ...extraPages, ...pages];\n          break;\n        }\n\n        // handle: (1) {2 3} [4] {5 6} > (10)\n        case !hasLeftSpill && hasRightSpill: {\n          const extraPages = range(endPage + 1, endPage + spillOffset);\n          pages = [...pages, ...extraPages, RIGHT_PAGE];\n          break;\n        }\n\n        // handle: (1) < {4 5} [6] {7 8} > (10)\n        case hasLeftSpill && hasRightSpill:\n        default: {\n          pages = [LEFT_PAGE, ...pages, RIGHT_PAGE];\n          break;\n        }\n      }\n\n      return [1, ...pages, totalPages];\n    }\n\n    return range(1, totalPages);\n  };\n\n  componentDidMount() {\n    this.gotoPage(1);\n  }\n\n  gotoPage = page => {\n    const { onPageChanged = f => f } = this.props;\n\n    const currentPage = Math.max(0, Math.min(page, this.totalPages));\n\n    const paginationData = {\n      currentPage,\n      totalPages: this.totalPages,\n      pageLimit: this.pageLimit,\n      totalRecords: this.totalRecords\n    };\n\n    this.setState({ currentPage }, () => onPageChanged(paginationData));\n  };\n\n  handleClick = page => evt => {\n    evt.preventDefault();\n    this.gotoPage(page);\n  };\n\n  handleMoveLeft = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage - this.pageNeighbours * 2 - 1);\n  };\n\n  handleMoveRight = evt => {\n    evt.preventDefault();\n    this.gotoPage(this.state.currentPage + this.pageNeighbours * 2 + 1);\n  };\n\n  render() {\n    if (!this.totalRecords || this.totalPages === 1) return null;\n\n    const { currentPage } = this.state;\n    const pages = this.fetchPageNumbers();\n\n    return (\n      <Fragment>\n        <nav aria-label=\"Syllabi Pagination\">\n          <ul className=\"pagination\" style={{ float: 'right', padding: '.5%' }}>\n            {pages.map((page, index) => {\n              if (page === LEFT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <a\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Previous\"\n                      onClick={this.handleMoveLeft}\n                    >\n                      <span aria-hidden=\"true\">&laquo;</span>\n                      <span className=\"sr-only\">Previous</span>\n                    </a>\n                  </li>\n                );\n\n              if (page === RIGHT_PAGE)\n                return (\n                  <li key={index} className=\"page-item\">\n                    <a\n                      className=\"page-link\"\n                      href=\"#\"\n                      aria-label=\"Next\"\n                      onClick={this.handleMoveRight}\n                    >\n                      <span aria-hidden=\"true\">&raquo;</span>\n                      <span className=\"sr-only\">Next</span>\n                    </a>\n                  </li>\n                );\n\n              return (\n                <li\n                  key={index}\n                  className={`page-item${\n                    currentPage === page ? ' active' : ''\n                  }`}\n                >\n                  <a\n                    className=\"page-link\"\n                    href=\"#\"\n                    onClick={this.handleClick(page)}\n                  >\n                    {page}\n                  </a>\n                </li>\n              );\n            })}\n          </ul>\n        </nav>\n      </Fragment>\n    );\n  }\n}\n\nPagination.propTypes = {\n  totalRecords: PropTypes.number.isRequired,\n  pageLimit: PropTypes.number,\n  pageNeighbours: PropTypes.number,\n  onPageChanged: PropTypes.func\n};\n\nexport default Pagination;\n","import { connect } from 'react-redux';\nimport SyllabiList from '../components/SyllabiList';\n\nconst mapStateToProps = state => {\n  return {\n    syllabiList: state.syllabiList,\n    user: state.user\n  };\n};\n\nconst SyllabiListContainer = connect(mapStateToProps)(SyllabiList);\n\nexport default SyllabiListContainer;\n","import React, { Component } from 'react';\nimport { getCurrentDate } from '../utils';\nimport {\n  Button,\n  Form,\n  Row,\n  Col,\n  InputGroup,\n  Jumbotron,\n  Modal\n} from 'react-bootstrap';\n\nlet headerStyle = {\n  paddingBottom: '1%',\n  color: 'deepSkyBlue'\n};\n\nlet rubric_code,\n  course_number,\n  course_name,\n  course_credits,\n  course_desc,\n  prereqs,\n  coreqs,\n  delivery_method,\n  dept_contact_info,\n  course_goals,\n  learning_outcomes,\n  course_topics,\n  revision_date,\n  is_inactive;\nlet date = getCurrentDate();\n\nclass SyllabusEdit extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ...this.state,\n      disabled: true,\n      editConfirmShow: false,\n      deleteConfirmShow: false\n    };\n  }\n\n  componentDidMount() {\n    let {\n      rubricCode,\n      courseNumber,\n      courseName,\n      courseCredits,\n      courseDesc,\n      prereqs,\n      coreqs,\n      deliveryMethod,\n      deptContactInfo,\n      courseGoals,\n      learningOutcomes,\n      courseTopics,\n      revisionDate,\n      isInactive\n    } = this.props.syllabus;\n    this.props.actions.updateSyllabusFormData({\n      rubric_code: rubricCode,\n      course_number: courseNumber,\n      course_name: courseName,\n      course_credits: courseCredits,\n      course_desc: courseDesc,\n      prereqs: prereqs,\n      coreqs: coreqs,\n      delivery_method: deliveryMethod,\n      dept_contact_info: deptContactInfo,\n      course_goals: courseGoals,\n      learning_outcomes: learningOutcomes,\n      course_topics: courseTopics,\n      revision_date: revisionDate,\n      is_inactive: isInactive\n    });\n  }\n\n  handleEditConfirmClose = () => {\n    this.setState({ editConfirmShow: false });\n  };\n\n  handleEditConfirmShow = () => {\n    this.setState({ editConfirmShow: true });\n  };\n\n  handleDeleteConfirmClose = () => {\n    this.setState({ deleteConfirmShow: false });\n  };\n\n  handleDeleteConfirmShow = () => {\n    this.setState({ deleteConfirmShow: true });\n  };\n\n  handleOnChange = event => {\n    const { name, value } = event.target;\n    console.log(event.target);\n    const currentSyllabusFormData = Object.assign(\n      {},\n      this.props.syllabusFormData,\n      {\n        [name]: value\n      }\n    );\n    console.log(currentSyllabusFormData);\n    this.props.actions.updateSyllabusFormData(currentSyllabusFormData);\n  };\n\n  toggleInactive = event => {\n    const { name, checked } = event.target;\n    console.log(event.target);\n    const currentSyllabusFormData = Object.assign(\n      {},\n      this.props.syllabusFormData,\n      {\n        [name]: checked\n      }\n    );\n    console.log(currentSyllabusFormData);\n    this.props.actions.updateSyllabusFormData(currentSyllabusFormData);\n  };\n\n  handleEditClick() {\n    this.setState({ disabled: !this.state.disabled });\n  }\n\n  render() {\n    let { syllabus, user, syllabusId, syllabusFormData } = this.props;\n    let disabledStyle, courseNameStyle;\n    if (this.state.disabled) {\n      disabledStyle = { backgroundColor: 'rgba(135,206,250,.35)' };\n      courseNameStyle = {\n        width: '35%',\n        backgroundColor: 'rgba(135,206,250,.35)'\n      };\n    } else {\n    }\n    return (\n      <Jumbotron>\n        {this.props.user && this.state.disabled && (\n          <Button\n            style={{\n              float: 'right',\n              color: 'deepSkyBlue'\n            }}\n            variant=\"outline-dark\"\n            onClick={this.handleEditClick.bind(this)}\n          >\n            Edit Syllabus\n          </Button>\n        )}\n        {this.props.user && !this.state.disabled && (\n          <Form.Group>\n            <Button\n              style={{\n                float: 'right',\n                color: 'deepSkyBlue'\n              }}\n              variant=\"outline-dark\"\n              onClick={this.handleEditClick.bind(this)}\n            >\n              Cancel\n            </Button>\n            <Button\n              style={{\n                float: 'right',\n                color: 'deepSkyBlue'\n              }}\n              variant=\"outline-dark\"\n              onClick={this.handleDeleteConfirmShow.bind(this)}\n            >\n              Delete Syllabus\n            </Button>\n            <Modal\n              show={this.state.deleteConfirmShow}\n              onHide={this.handleDeleteConfirmClose.bind(this)}\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>Confirm Delete</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                Are you sure you want to delete this syllabus?\n              </Modal.Body>\n              <Modal.Footer>\n                <Button\n                  variant=\"secondary\"\n                  onClick={this.handleDeleteConfirmClose.bind(this)}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  style={{ color: 'deepSkyBlue', backgroundColor: 'white' }}\n                  variant=\"outline-dark\"\n                  onClick={() => {\n                    this.props.actions.deleteSyllabus(syllabus.id);\n                    this.props.history.push(`/`);\n                  }}\n                >\n                  Delete\n                </Button>\n              </Modal.Footer>\n            </Modal>\n            <Button\n              style={{\n                float: 'right',\n                color: 'deepSkyBlue'\n              }}\n              variant=\"outline-dark\"\n              onClick={this.handleEditConfirmShow.bind(this)}\n            >\n              Submit Changes\n            </Button>\n            <Modal\n              show={this.state.editConfirmShow}\n              onHide={this.handleEditConfirmClose.bind(this)}\n            >\n              <Modal.Header closeButton>\n                <Modal.Title>Confirm Edit</Modal.Title>\n              </Modal.Header>\n              <Modal.Body>\n                Are you sure you want to submit changes to this syllabus?\n              </Modal.Body>\n              <Modal.Footer>\n                <Button\n                  variant=\"secondary\"\n                  onClick={this.handleEditConfirmClose.bind(this)}\n                >\n                  Cancel\n                </Button>\n                <Button\n                  style={{ color: 'deepSkyBlue' }}\n                  variant=\"outline-dark\"\n                  type=\"submit\"\n                  form=\"editForm\"\n                  onClick={this.handleEditConfirmClose.bind(this)}\n                >\n                  Submit\n                </Button>\n              </Modal.Footer>\n            </Modal>\n          </Form.Group>\n        )}\n        <h2 style={headerStyle}>\n          {this.state.disabled\n            ? syllabus.courseName\n            : `Editing ${syllabus.courseName}`}\n        </h2>\n        <Form\n          id=\"editForm\"\n          onSubmit={e => {\n            e.preventDefault();\n            this.handleEditClick();\n            if (\n              !rubric_code.value.trim() ||\n              !course_number.value.trim() ||\n              !course_name.value.trim()\n            ) {\n              return;\n            }\n            console.log(`Submitted: ${course_topics.value}`);\n            this.props.actions.updateSyllabus(\n              syllabus.id,\n              rubric_code.value,\n              course_number.value,\n              course_name.value,\n              course_credits.value,\n              course_desc.value,\n              prereqs.value,\n              coreqs.value,\n              delivery_method.value,\n              dept_contact_info.value,\n              course_goals.value,\n              learning_outcomes.value,\n              course_topics.value,\n              revision_date.value,\n              is_inactive.checked\n            );\n          }}\n        >\n          <Form.Row>\n            <Form.Group as={Col} controlId=\"formGridEmail\">\n              <InputGroup>\n                <InputGroup.Prepend>\n                  <InputGroup.Text id=\"basic-addon3\">\n                    Course Info:\n                  </InputGroup.Text>\n                </InputGroup.Prepend>\n                <Form.Control\n                  value={syllabusFormData.rubric_code}\n                  name=\"rubric_code\"\n                  onChange={this.handleOnChange}\n                  disabled={this.state.disabled}\n                  style={disabledStyle}\n                  ref={node => {\n                    rubric_code = node;\n                  }}\n                  as=\"select\"\n                >\n                  //<option>{syllabus.rubricCode}</option>\n                  <option>ACCT</option>\n                  <option>CSCI</option>\n                  <option>DIGM</option>\n                  <option>ENGL</option>\n                  <option>JOUR</option>\n                  <option>MATH</option>\n                  <option>MGMT</option>\n                  <option>MUSC</option>\n                  <option>HIST</option>\n                  <option>SOCI</option>\n                </Form.Control>\n                <Form.Control\n                  type=\"text\"\n                  value={syllabusFormData.course_number}\n                  name=\"course_number\"\n                  onChange={this.handleOnChange}\n                  disabled={this.state.disabled}\n                  style={disabledStyle}\n                  ref={node => {\n                    course_number = node;\n                  }}\n                />\n                <Form.Control\n                  type=\"text\"\n                  value={syllabusFormData.course_name}\n                  name=\"course_name\"\n                  onChange={this.handleOnChange}\n                  disabled={this.state.disabled}\n                  style={courseNameStyle}\n                  ref={node => {\n                    course_name = node;\n                  }}\n                />\n                <Form.Control\n                  type=\"text\"\n                  value={syllabusFormData.course_credits}\n                  name=\"course_credits\"\n                  onChange={this.handleOnChange}\n                  disabled={this.state.disabled}\n                  style={disabledStyle}\n                  ref={node => {\n                    course_credits = node;\n                  }}\n                />\n              </InputGroup>\n            </Form.Group>\n          </Form.Row>\n\n          <h4 style={headerStyle}>Catalog Information:</h4>\n\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Catalog Description:\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"4\"\n                value={syllabusFormData.course_desc}\n                name=\"course_desc\"\n                onChange={this.handleOnChange}\n                disabled={this.state.disabled}\n                style={disabledStyle}\n                ref={node => {\n                  course_desc = node;\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Prerequisites:\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"2\"\n                value={syllabusFormData.prereqs}\n                name=\"prereqs\"\n                onChange={this.handleOnChange}\n                disabled={this.state.disabled}\n                style={disabledStyle}\n                ref={node => {\n                  prereqs = node;\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Corequisites:\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"2\"\n                value={syllabusFormData.coreqs}\n                name=\"coreqs\"\n                onChange={this.handleOnChange}\n                disabled={this.state.disabled}\n                style={disabledStyle}\n                ref={node => {\n                  coreqs = node;\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Delivery Method:\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                value={syllabusFormData.delivery_method}\n                name=\"delivery_method\"\n                onChange={this.handleOnChange}\n                disabled={this.state.disabled}\n                style={disabledStyle}\n                ref={node => {\n                  delivery_method = node;\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <h4 style={headerStyle}>Contact Information:</h4>\n\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Dept Contact Info:\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                value={syllabusFormData.dept_contact_info}\n                name=\"dept_contact_info\"\n                onChange={this.handleOnChange}\n                disabled={this.state.disabled}\n                style={disabledStyle}\n                ref={node => {\n                  dept_contact_info = node;\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <h4 style={headerStyle}>Syllabus Overview:</h4>\n\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Course Purpose and Objectives:\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"4\"\n                value={syllabusFormData.course_goals}\n                name=\"course_goals\"\n                onChange={this.handleOnChange}\n                disabled={this.state.disabled}\n                style={disabledStyle}\n                ref={node => {\n                  course_goals = node;\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Expected Learning Outcomes:\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"4\"\n                value={syllabusFormData.learning_outcomes}\n                name=\"learning_outcomes\"\n                onChange={this.handleOnChange}\n                disabled={this.state.disabled}\n                style={disabledStyle}\n                ref={node => {\n                  learning_outcomes = node;\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Major Course Topics:\n            </Form.Label>\n            <Col sm={10}>\n              <Form.Control\n                as=\"textarea\"\n                rows=\"4\"\n                value={syllabusFormData.course_topics}\n                name=\"course_topics\"\n                onChange={this.handleOnChange}\n                disabled={this.state.disabled}\n                style={disabledStyle}\n                ref={node => {\n                  course_topics = node;\n                }}\n              />\n            </Col>\n          </Form.Group>\n\n          <h4 style={headerStyle}>Additional Information:</h4>\n\n          <Form.Group as={Row}>\n            <Form.Label column sm={2}>\n              Revision Term:\n            </Form.Label>\n            <Col sm={3}>\n              <Form.Control\n                type=\"text\"\n                value={syllabusFormData.revision_date}\n                name=\"revision_date\"\n                onChange={this.handleOnChange}\n                style={disabledStyle}\n                disabled={this.state.disabled}\n                ref={node => {\n                  revision_date = node;\n                }}\n              />\n            </Col>\n            {this.props.user && (\n              <Form.Check\n                style={{ paddingTop: '.5%' }}\n                type=\"checkbox\"\n                label=\"Is Inactive\"\n                checked={syllabusFormData.is_inactive}\n                name=\"is_inactive\"\n                onChange={this.toggleInactive}\n                disabled={this.state.disabled}\n                ref={node => {\n                  is_inactive = node;\n                }}\n              />\n            )}\n          </Form.Group>\n        </Form>\n      </Jumbotron>\n    );\n  }\n}\n\nexport default SyllabusEdit;\n","import { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport * as syllabusActions from '../actions/index';\nimport SyllabusEdit from '../components/SyllabusEdit';\n\nconst mapStateToProps = (state, props) => {\n  const { syllabusId } = props.match.params;\n  return {\n    syllabus: state.syllabiList.find(e => e.id == syllabusId),\n    user: state.user,\n    syllabusId: syllabusId,\n    syllabusFormData: state.syllabusFormData\n  };\n};\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    actions: bindActionCreators(syllabusActions, dispatch)\n  };\n}\n\nconst SyllabiEditContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(SyllabusEdit);\n\nexport default SyllabiEditContainer;\n","import React from 'react';\n\nimport { Link, Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: 'row',\n    borderBottomWidth: 2,\n    borderBottomColor: '#112131',\n    borderBottomStyle: 'solid',\n    alignItems: 'stretch'\n  },\n  detailColumn: {\n    flexDirection: 'column',\n    flexGrow: 9\n  },\n  linkColumn: {\n    flexDirection: 'column',\n    flexGrow: 2,\n    alignSelf: 'flex-end',\n    justifySelf: 'flex-end'\n  },\n  name: {\n    fontSize: 24,\n    textTransform: 'uppercase'\n  },\n  subtitle: {\n    fontSize: 10,\n    justifySelf: 'flex-end',\n    textTransform: 'uppercase'\n  },\n  link: {\n    fontSize: 10,\n    color: 'black',\n    textDecoration: 'none',\n    alignSelf: 'flex-end',\n    justifySelf: 'flex-end'\n  }\n});\n\nexport default props => (\n  <View style={styles.container}>\n    <View style={styles.detailColumn}>\n      <Text style={styles.name}>{props.syllabus.courseName}</Text>\n      <Text style={styles.subtitle}>\n        {props.syllabus.rubricCode} - {props.syllabus.courseNumber}\n      </Text>\n    </View>\n    <View style={styles.linkColumn}>\n      <Link style={styles.link}>www.etsu.edu</Link>\n    </View>\n  </View>\n);\n","import React from 'react';\n\nimport { Text, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 14,\n    marginBottom: 10,\n    textTransform: 'uppercase'\n  }\n});\n\nconst Title = ({ children }) => <Text style={styles.title}>{children}</Text>;\n\nexport default Title;\n","import React from 'react';\n\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\nimport Title from './Title';\n\nconst styles = StyleSheet.create({\n  container: {\n    marginBottom: 10\n  },\n  school: {\n    fontSize: 10\n  },\n  degree: {\n    fontSize: 10\n  },\n  candidate: {\n    fontSize: 10\n  }\n});\n\nexport default () => (\n  <View style={styles.container}>\n    <Title>Education</Title>\n    <Text style={styles.school}>Jedi Academy</Text>\n    <Text style={styles.degree}>Jedi Master</Text>\n    <Text style={styles.candidate}>A long, long time ago</Text>\n  </View>\n);\n","import React from 'react';\n\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n  item: {\n    flexDirection: 'row',\n    marginBottom: 5\n  },\n  bulletPoint: {\n    width: 10,\n    fontSize: 10\n  },\n  itemContent: {\n    flex: 1,\n    fontSize: 10\n  }\n});\n\nconst List = ({ children }) => children;\n\nexport const Item = ({ children }) => (\n  <View style={styles.item}>\n    <Text style={styles.bulletPoint}>•</Text>\n    <Text style={styles.itemContent}>{children}</Text>\n  </View>\n);\n\nexport default List;\n","import React from 'react';\n\nimport Title from './Title';\nimport List, { Item } from './List';\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    paddingTop: 30,\n    paddingLeft: 15,\n    '@media max-width: 400': {\n      paddingTop: 10,\n      paddingLeft: 0\n    }\n  },\n  entryContainer: {\n    marginBottom: 10\n  },\n  date: {\n    fontSize: 11\n  },\n  detailContainer: {\n    flexDirection: 'row'\n  },\n  detailLeftColumn: {\n    flexDirection: 'column',\n    marginLeft: 10,\n    marginRight: 10\n  },\n  detailRightColumn: {\n    flexDirection: 'column',\n    flexGrow: 9\n  },\n  bulletPoint: {\n    fontSize: 10\n  },\n  details: {\n    fontSize: 10\n  },\n  headerContainer: {\n    flexDirection: 'row',\n    marginBottom: 10\n  },\n  leftColumn: {\n    flexDirection: 'column',\n    flexGrow: 9\n  },\n  rightColumn: {\n    flexDirection: 'column',\n    flexGrow: 1,\n    alignItems: 'flex-end',\n    justifySelf: 'flex-end'\n  },\n  title: {\n    fontSize: 11,\n    color: 'black',\n    textDecoration: 'none'\n  }\n});\n\nconst ExperienceEntry = ({ company, details, position, date }) => {\n  const title = `${company} | ${position}`;\n  return (\n    <View style={styles.entryContainer}>\n      <View style={styles.headerContainer}>\n        <View style={styles.leftColumn}>\n          <Text style={styles.title}>{title}</Text>\n        </View>\n        <View style={styles.rightColumn}>\n          <Text style={styles.date}>{date}</Text>\n        </View>\n      </View>\n      <List>\n        {details.map((detail, i) => (\n          <Item key={i} style={styles.detailContainer}>\n            {detail}\n          </Item>\n        ))}\n      </List>\n    </View>\n  );\n};\n\nconst experienceData = [\n  {\n    company: 'Jedi Temple, Coruseant',\n    date: 'A long time ago...',\n    details: [\n      'Started a new Jedi Temple in order to train the next generation of Jedi Masters',\n      'Discovered and trained a new generation of Jedi Knights, which he recruited from within the New Republic',\n      'Communicates with decesased Jedi Masters such as Anakin Skywalker, Yoda, Obi-Wan Kenobi in order to learn the secrets of the Jedi Order'\n    ],\n    position: 'Head Jedi Master'\n  },\n  {\n    company: 'Rebel Alliance',\n    date: 'A long time ago...',\n    details: [\n      'Lead legions of troops into battle while demonstrating bravery, competence and honor',\n      'Created complicated battle plans in conjunction with other Rebel leaders in order to ensure the greatest chance of success',\n      'Defeated Darth Vader in single-combat, and convinced him to betray his mentor, the Emperor'\n    ],\n    position: 'General'\n  },\n  {\n    company: 'Rebel Alliance',\n    date: 'A long time ago...',\n    details: [\n      'Destroyed the Death Star by using the force to find its only weakness and delivering a torpedo into the center of the ship',\n      'Commanded of squadron of X-Wings into battle',\n      'Defeated an enemy AT-AT single handedly after his ship was destroyed',\n      'Awarded a medal for valor and bravery in battle for his successful destruction of the Death Star'\n    ],\n    position: 'Lieutenant Commander'\n  },\n  {\n    company: 'Tatooine Moisture Refinery',\n    date: 'A long time ago...',\n    details: [\n      'Replaced damaged power converters',\n      'Performed menial labor thoughout the farm in order to ensure its continued operation'\n    ],\n    position: 'Moisture Farmer'\n  }\n];\n\nconst Experience = () => (\n  <View style={styles.container}>\n    <Title>Experience</Title>\n    {experienceData.map(({ company, date, details, position }) => (\n      <ExperienceEntry\n        company={company}\n        date={date}\n        details={details}\n        key={company + position}\n        position={position}\n      />\n    ))}\n  </View>\n);\n\nexport default Experience;\n","import React from 'react';\n\nimport Title from './Title';\nimport List, { Item } from './List';\nimport { Text, View, StyleSheet } from '@react-pdf/renderer';\n\nconst styles = StyleSheet.create({\n  title: {\n    fontSize: 11,\n    marginBottom: 10\n  },\n  skills: {\n    fontSize: 10,\n    marginBottom: 10\n  }\n});\n\nconst SkillEntry = ({ name, skills }) => (\n  <View>\n    <Text style={styles.title}>{name}</Text>\n    <List>\n      {skills.map((skill, i) => (\n        <Item key={i}>{skill}</Item>\n      ))}\n    </List>\n  </View>\n);\n\nconst Skills = () => (\n  <View>\n    <Title>Skills</Title>\n    <SkillEntry\n      name=\"Combat Abilities\"\n      skills={[\n        'Completed Jedi Master training and built a lightsaber from scratch in order to do battle against the Empire',\n        'Defeated the Rancor and rescued Princess Leia from Jabba the Hutt',\n        'Competent fighter pilot as well as an excelent shot with nearly any weapon'\n      ]}\n    />\n  </View>\n);\n\nexport default Skills;\n","import React from 'react';\n\nimport ReactPDF, {\n  Text,\n  Document,\n  Font,\n  Page,\n  StyleSheet,\n  Image,\n  View,\n  PDFViewer\n} from '@react-pdf/renderer';\nimport Header from './DocumentSections/Header';\nimport Education from './DocumentSections/Education';\nimport Experience from './DocumentSections/Experience';\nimport Skills from './DocumentSections/Skills';\n\nconst styles = StyleSheet.create({\n  page: {\n    padding: 30\n  },\n  container: {\n    flex: 1,\n    flexDirection: 'row',\n    '@media max-width: 400': {\n      flexDirection: 'column'\n    }\n  },\n  image: {\n    marginBottom: 10\n  },\n  leftColumn: {\n    flexDirection: 'column',\n    width: 170,\n    paddingTop: 30,\n    paddingRight: 15,\n    '@media max-width: 400': {\n      width: '100%',\n      paddingRight: 0\n    },\n    '@media orientation: landscape': {\n      width: 200\n    }\n  },\n  footer: {\n    fontSize: 12,\n    textAlign: 'center',\n    marginTop: 25,\n    paddingTop: 10,\n    borderWidth: 3,\n    borderColor: 'gray',\n    borderStyle: 'dashed',\n    '@media orientation: landscape': {\n      marginTop: 10\n    }\n  }\n});\n\nconst Syllabus = props => (\n  <Page {...props} style={styles.page}>\n    <Header syllabus={props.syllabus} />\n    <View style={styles.container}>\n      <View style={styles.leftColumn}>\n        <Image src=\"../Syllabison.png\" style={styles.image} />\n        <Education syllabus={props.syllabus} />\n        <Skills syllabus={props.syllabus} />\n      </View>\n      <Experience syllabus={props.syllabus} />\n    </View>\n    <Text style={styles.footer}>Generated by the Syllabison platform</Text>\n  </Page>\n);\n\nconst SyllabusDocument = props => (\n  <PDFViewer width=\"100%\" height=\"100%\">\n    <Document title={`${props.syllabus.courseName} Syllabus`}>\n      <Syllabus syllabus={props.syllabus} />\n    </Document>\n  </PDFViewer>\n);\n\nexport default SyllabusDocument;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { PDFViewer } from '@react-pdf/renderer';\nimport SyllabusDocument from '../components/SyllabusDocument';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state, props) => {\n  const { syllabusId } = props.match.params;\n  return {\n    syllabus: state.syllabiList.find(e => e.id == syllabusId),\n    user: state.user\n  };\n};\n\nlet SyllabusDocumentContainer = () => {\n  return <SyllabusDocument />;\n};\n\nSyllabusDocumentContainer = connect(mapStateToProps)(SyllabusDocument);\n\nexport default SyllabusDocumentContainer;\n","import React, { Component } from 'react';\nimport Container from 'react-bootstrap/Container';\nimport Button from 'react-bootstrap/Button';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { Route } from 'react-router-dom';\nimport styled from 'styled-components';\n\nimport Callback from './containers/Callback';\nimport NavigationContainer from './containers/NavigationContainer';\nimport AddSyllabus from './containers/AddSyllabus';\nimport SyllabiListContainer from './containers/SyllabiListContainer';\nimport SyllabusEditContainer from './containers/SyllabusEditContainer';\nimport SyllabusDocumentContainer from './containers/SyllabusDocumentContainer';\n\nimport Logo from './SyllabisonLogo.png';\nconst Image = styled.img`\n  height: 15em;\n  width: 100%;\n  margin-bottom: -3.5%;\n  max-width: 930px;\n  display: block;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n        <Row className=\"row\">\n          <Col xs={12}>\n            <Image src={Logo} />\n            <NavigationContainer />\n            <Route exact path=\"/\" component={SyllabiListContainer} />\n            <Route exact path=\"/new-syllabus\" component={AddSyllabus} />\n            <Route exact path=\"/callback\" component={Callback} />\n            <Route\n              exact\n              path=\"/search/:searchTerm?\"\n              component={SyllabiListContainer}\n            />\n            <Route\n              path=\"/syllabi/edit/:syllabusId\"\n              component={SyllabusEditContainer}\n            />\n            <Route\n              exact\n              path=\"/syllabi/:syllabusId\"\n              component={SyllabusDocumentContainer}\n            />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import {\n  ADD_SYLLABUS,\n  UPDATE_SYLLABUS,\n  DELETE_SYLLABUS,\n  UPDATED_FORM_DATA\n} from '../actions';\nimport { USER_PROFILE_LOADED, SIGN_OUT } from '../actions';\n\nconst initialState = {\n  syllabiList: [\n    {\n      id: 0,\n      rubricCode: 'MATH',\n      courseNumber: '1000',\n      courseName: 'How to Add Numbers',\n      courseCredits: '',\n      courseDesc: '',\n      prereqs: '',\n      coreqs: '',\n      deliveryMethod: '',\n      deptContactInfo: '',\n      courseGoals: '',\n      learningOutcomes: '',\n      courseTopics: '',\n      revisionDate: '',\n      isInactive: false\n    },\n    {\n      id: 1,\n      rubricCode: 'CSCI',\n      courseNumber: '1100',\n      courseName: 'Using InfoTech',\n      courseCredits: '',\n      courseDesc: '',\n      prereqs: '',\n      coreqs: '',\n      deliveryMethod: '',\n      deptContactInfo: '',\n      courseGoals: '',\n      learningOutcomes: '',\n      courseTopics: '',\n      revisionDate: '',\n      isInactive: false\n    }\n  ],\n  syllabusFormData: {\n    rubric_ode: '',\n    course_number: '',\n    course_name: '',\n    course_credits: '',\n    course_desc: '',\n    prereqs: '',\n    coreqs: '',\n    delivery_method: '',\n    dept_contact_info: '',\n    course_goals: '',\n    learning_outcomes: '',\n    course_topics: '',\n    revision_date: '',\n    is_inactive: false\n  }\n};\n\nexport default function syllabisonApp(state = initialState, action) {\n  let updatedSyllabiList;\n  switch (action.type) {\n    case ADD_SYLLABUS:\n      let newSyllabiList = [\n        ...state.syllabiList,\n        {\n          ...action.syllabus\n        }\n      ];\n      return {\n        ...state,\n        syllabiList: newSyllabiList\n      };\n    case UPDATE_SYLLABUS:\n      updatedSyllabiList = [\n        ...state.syllabiList.filter(\n          syllabus => syllabus.id !== action.syllabus.id\n        ),\n        Object.assign({}, action.syllabus)\n      ];\n      return {\n        syllabiList: updatedSyllabiList,\n        user: state.user,\n        syllabusFormData: state.syllabusFormData\n      };\n    case DELETE_SYLLABUS:\n      updatedSyllabiList = [\n        ...state.syllabiList.filter(syllabus => syllabus.id !== action.id)\n      ];\n      return {\n        syllabiList: updatedSyllabiList,\n        user: state.user,\n        syllabusFormData: state.syllabusFormData\n      };\n    case UPDATED_FORM_DATA:\n      return Object.assign({}, state, {\n        syllabusFormData: action.syllabusFormData\n      });\n    case USER_PROFILE_LOADED:\n      return {\n        ...state,\n        user: action.user\n      };\n    case SIGN_OUT:\n      let oldSyllabiList = [...state.syllabiList];\n      return {\n        syllabiList: oldSyllabiList\n      };\n    default:\n      return state;\n  }\n}\n","import { all, call, put, takeEvery, takeLatest } from 'redux-saga/effects';\nimport {\n  HANDLE_AUTHENTICATION_CALLBACK,\n  USER_PROFILE_LOADED\n} from '../actions';\nimport { handleAuthentication } from '../Auth';\n\nexport function* parseHash() {\n  const user = yield call(handleAuthentication);\n  yield put({ type: USER_PROFILE_LOADED, user });\n}\n\nexport function* handleAuthenticationCallback() {\n  yield takeLatest(HANDLE_AUTHENTICATION_CALLBACK, parseHash);\n}\n\n// replace the current rootSaga generator\nexport default function* rootSaga() {\n  yield all([handleAuthenticationCallback()]);\n}\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport { BrowserRouter } from 'react-router-dom';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport { PersistGate } from 'redux-persist/lib/integration/react';\n\nimport App from './App';\nimport syllabisonApp from './reducers';\nimport rootSaga from './sagas';\n\nconst persistConfig = {\n  key: 'root',\n  storage: storage,\n  stateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\n};\n\nconst pReducer = persistReducer(persistConfig, syllabisonApp);\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst store = createStore(pReducer, applyMiddleware(sagaMiddleware));\nconst persistor = persistStore(store);\n\nsagaMiddleware.run(rootSaga);\n\nrender(\n  <Provider store={store}>\n    <BrowserRouter>\n      <PersistGate persistor={persistor}>\n        <App />\n      </PersistGate>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}